[{"D:\\Front-End\\Project\\educational_app\\src\\index.js":"1","D:\\Front-End\\Project\\educational_app\\src\\App.js":"2","D:\\Front-End\\Project\\educational_app\\src\\reportWebVitals.js":"3","D:\\Front-End\\Project\\educational_app\\src\\contacts\\contacts.js":"4","D:\\Front-End\\Project\\educational_app\\src\\reducers\\reducers.js":"5","D:\\Front-End\\Project\\educational_app\\src\\reducers\\phones.js":"6","D:\\Front-End\\Project\\educational_app\\src\\reducers\\names.js":"7","D:\\Front-End\\Project\\educational_app\\src\\reducers\\surnames.js":"8","D:\\Front-End\\Project\\educational_app\\src\\form\\form.js":"9"},{"size":681,"mtime":1610913965923,"results":"10","hashOfConfig":"11"},{"size":185,"mtime":1610923636973,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":2529,"mtime":1610923177820,"results":"14","hashOfConfig":"11"},{"size":225,"mtime":1610919011529,"results":"15","hashOfConfig":"11"},{"size":318,"mtime":1610920914597,"results":"16","hashOfConfig":"11"},{"size":315,"mtime":1610920830526,"results":"17","hashOfConfig":"11"},{"size":276,"mtime":1610920997015,"results":"18","hashOfConfig":"11"},{"size":3349,"mtime":1610923519647,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"8dfja3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"D:\\Front-End\\Project\\educational_app\\src\\index.js",[],["42","43"],"D:\\Front-End\\Project\\educational_app\\src\\App.js",[],"D:\\Front-End\\Project\\educational_app\\src\\reportWebVitals.js",[],"D:\\Front-End\\Project\\educational_app\\src\\contacts\\contacts.js",[],"D:\\Front-End\\Project\\educational_app\\src\\reducers\\reducers.js",[],"D:\\Front-End\\Project\\educational_app\\src\\reducers\\phones.js",["44"],"import { act } from \"react-dom/test-utils\";\r\n\r\nconst initialState = [];\r\n  \r\n  export function phones(state = initialState, action) {\r\n    if (action.type === 'ADD_PHONE') {\r\n        return [...state, action.payload]\r\n    } else if (action.type === 'CLEAR_PHONES') {\r\n      return []\r\n    }\r\n  \r\n    return state;\r\n  }","D:\\Front-End\\Project\\educational_app\\src\\reducers\\names.js",["45"],"import { act } from \"react-dom/test-utils\";\r\n\r\nconst initialState = [];\r\n  \r\n  export function names(state = initialState, action) {\r\n    if (action.type === 'ADD_NAME') {\r\n        return [...state, action.payload]\r\n    } else if (action.type === 'CLEAR_NAMES') {\r\n      return []\r\n    }\r\n  \r\n    return state;\r\n  }","D:\\Front-End\\Project\\educational_app\\src\\reducers\\surnames.js",[],"D:\\Front-End\\Project\\educational_app\\src\\form\\form.js",["46","47","48"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './index.css'\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            checkName: false,\r\n            checkSurname: false,\r\n            checkPhone: false,\r\n        }\r\n\r\n        this.saveContact = this.saveContact.bind(this);\r\n        this.checkName = this.checkName.bind(this);\r\n        this.checkSurname = this.checkSurname.bind(this);\r\n        this.checkPhone = this.checkPhone.bind(this);\r\n\r\n        this.nameRef = React.createRef();\r\n        this.surnameRef = React.createRef();\r\n        this.phoneRef = React.createRef();\r\n    }\r\n    saveContact() {\r\n        this.props.onSaveName(this.nameRef.current.value);\r\n        this.props.onSaveSurname(this.surnameRef.current.value);\r\n        this.props.onSavePhone(this.phoneRef.current.value);\r\n\r\n        this.nameRef.current.value = '';\r\n        this.surnameRef.current.value = '';\r\n        this.phoneRef.current.value = '';\r\n\r\n        this.setState({\r\n            checkName: false,\r\n            checkSurname: false,\r\n            checkPhone: false \r\n        }); \r\n    }\r\n\r\n    checkName(e) {\r\n        this.setState({checkName: e.target.value.length > 0})\r\n    }\r\n\r\n    checkSurname(e) {\r\n        this.setState({\r\n            checkSurname: e.target.value.length > 0 \r\n        })  \r\n    }\r\n\r\n    checkPhone(e) {\r\n        this.setState({\r\n            checkPhone: e.target.value.length > 0\r\n        }) \r\n    }\r\n\r\n    render() {\r\n        let colorName = this.state.checkName == true ? 'green' : 'red';\r\n        let colorSurname = this.state.checkSurname == true ? 'green' : 'red';\r\n        let colorPhone = this.state.checkPhone == true ? 'green' : 'red'; \r\n\r\n        return (\r\n            <div className='form'>\r\n            <input \r\n                type='text'\r\n                placeholder='Name'\r\n                ref={this.nameRef}\r\n                onChange={this.checkName}\r\n                style={ {borderColor: colorName} }\r\n            />\r\n            <input \r\n                type='text'\r\n                placeholder='Surname'\r\n                ref={this.surnameRef}\r\n                onChange={this.checkSurname}\r\n                style={ {borderColor: colorSurname} }\r\n            />\r\n            <input \r\n                type='text'\r\n                placeholder='Phone'\r\n                ref={this.phoneRef}\r\n                onChange={this.checkPhone}\r\n                style={ {borderColor: colorPhone} }\r\n            />\r\n            <div>\r\n                {(this.state.checkName && this.state.checkSurname && this.state.checkPhone) \r\n                ? <button className='save-contacts-btn' onClick={this.saveContact}>Save Contact</button>\r\n                : <button className='save-contacts-disabled-btn' disabled>Save Contact</button>}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const FormComponent = connect(\r\n    state => ({\r\n        contacts: state \r\n    }),\r\n    dispatch => ({\r\n        onSaveName: (name) => {\r\n            dispatch({ type: 'ADD_NAME', payload: name })\r\n        },\r\n        onSaveSurname: (surname) => {\r\n            dispatch({ type: 'ADD_SURNAME', payload: surname })\r\n        },\r\n        onSavePhone: (phone) => {\r\n            dispatch({ type: 'ADD_PHONE', payload: phone })\r\n        }\r\n    })\r\n)(Form); ",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":13},{"ruleId":"53","severity":1,"message":"54","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":13},{"ruleId":"57","severity":1,"message":"58","line":57,"column":46,"nodeType":"59","messageId":"60","endLine":57,"endColumn":48},{"ruleId":"57","severity":1,"message":"58","line":58,"column":52,"nodeType":"59","messageId":"60","endLine":58,"endColumn":54},{"ruleId":"57","severity":1,"message":"58","line":59,"column":48,"nodeType":"59","messageId":"60","endLine":59,"endColumn":50},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'act' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]